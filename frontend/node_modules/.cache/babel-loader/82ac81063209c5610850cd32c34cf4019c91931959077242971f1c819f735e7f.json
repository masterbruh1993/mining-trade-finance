{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Mining Trade Finance\\\\frontend\\\\src\\\\context\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport Notification from '../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotification = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const showNotification = (message, type = 'success', duration = 5000) => {\n    const id = Date.now() + Math.random();\n    const notification = {\n      id,\n      message,\n      type,\n      duration\n    };\n    setNotifications(prev => [...prev, notification]);\n\n    // Auto remove after duration\n    setTimeout(() => {\n      removeNotification(id);\n    }, duration + 300); // Add 300ms for animation\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const showSuccess = (message, duration) => {\n    showNotification(message, 'success', duration);\n  };\n  const showError = (message, duration) => {\n    showNotification(message, 'error', duration);\n  };\n  const value = {\n    showNotification,\n    showSuccess,\n    showError,\n    removeNotification\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-container\",\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: `${20 + index * 70}px`,\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1000 + index\n        },\n        children: /*#__PURE__*/_jsxDEV(Notification, {\n          message: notification.message,\n          type: notification.type,\n          duration: notification.duration,\n          onClose: () => removeNotification(notification.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotificationProvider, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","Notification","jsxDEV","_jsxDEV","NotificationContext","useNotification","_s","context","Error","NotificationProvider","children","_s2","notifications","setNotifications","showNotification","message","type","duration","id","Date","now","Math","random","notification","prev","setTimeout","removeNotification","filter","showSuccess","showError","value","Provider","className","map","index","style","position","top","left","transform","zIndex","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/Mining Trade Finance/frontend/src/context/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport Notification from '../components/Notification';\n\nconst NotificationContext = createContext();\n\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const showNotification = (message, type = 'success', duration = 5000) => {\n    const id = Date.now() + Math.random();\n    const notification = { id, message, type, duration };\n    \n    setNotifications(prev => [...prev, notification]);\n    \n    // Auto remove after duration\n    setTimeout(() => {\n      removeNotification(id);\n    }, duration + 300); // Add 300ms for animation\n  };\n\n  const removeNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  const showSuccess = (message, duration) => {\n    showNotification(message, 'success', duration);\n  };\n\n  const showError = (message, duration) => {\n    showNotification(message, 'error', duration);\n  };\n\n  const value = {\n    showNotification,\n    showSuccess,\n    showError,\n    removeNotification\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n      <div className=\"notification-container\">\n        {notifications.map((notification, index) => (\n          <div\n            key={notification.id}\n            style={{\n              position: 'fixed',\n              top: `${20 + (index * 70)}px`,\n              left: '50%',\n              transform: 'translateX(-50%)',\n              zIndex: 1000 + index\n            }}\n          >\n            <Notification\n              message={notification.message}\n              type={notification.type}\n              duration={notification.duration}\n              onClose={() => removeNotification(notification.id)}\n            />\n          </div>\n        ))}\n      </div>\n    </NotificationContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
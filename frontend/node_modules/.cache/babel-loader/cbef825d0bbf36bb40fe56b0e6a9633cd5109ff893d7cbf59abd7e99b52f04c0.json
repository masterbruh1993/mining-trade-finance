{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\1Uptrade-v3\\\\frontend\\\\src\\\\components\\\\Captcha.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Captcha.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Captcha = ({\n  onVerify,\n  isVerified\n}) => {\n  _s();\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [error, setError] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const generateCaptcha = () => {\n    const n1 = Math.floor(Math.random() * 10) + 1;\n    const n2 = Math.floor(Math.random() * 10) + 1;\n    setNum1(n1);\n    setNum2(n2);\n    setCorrectAnswer(n1 + n2);\n    setUserAnswer('');\n    setError('');\n  };\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const answer = parseInt(userAnswer);\n    if (answer === correctAnswer) {\n      setError('');\n      onVerify(true);\n    } else {\n      setError('Incorrect answer. Please try again.');\n      onVerify(false);\n      generateCaptcha();\n    }\n  };\n  const handleRefresh = () => {\n    generateCaptcha();\n    onVerify(false);\n  };\n  if (isVerified) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"captcha-container verified\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Captcha Verified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"captcha-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"captcha-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Security Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRefresh,\n        className: \"refresh-btn\",\n        children: \"\\uD83D\\uDD04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"captcha-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-question\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"math-expression\",\n          children: [num1, \" + \", num2, \" = ?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          placeholder: \"Enter answer\",\n          className: \"captcha-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"captcha-verify-btn\",\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Captcha, \"wkjW5Hj4MJ5Gh0OTzFKUHOPo4vQ=\");\n_c = Captcha;\nexport default Captcha;\nvar _c;\n$RefreshReg$(_c, \"Captcha\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Captcha","onVerify","isVerified","_s","num1","setNum1","num2","setNum2","userAnswer","setUserAnswer","error","setError","correctAnswer","setCorrectAnswer","generateCaptcha","n1","Math","floor","random","n2","handleSubmit","e","preventDefault","answer","parseInt","handleRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onSubmit","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/1Uptrade-v3/frontend/src/components/Captcha.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Captcha.css';\n\nconst Captcha = ({ onVerify, isVerified }) => {\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [error, setError] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n\n  const generateCaptcha = () => {\n    const n1 = Math.floor(Math.random() * 10) + 1;\n    const n2 = Math.floor(Math.random() * 10) + 1;\n    setNum1(n1);\n    setNum2(n2);\n    setCorrectAnswer(n1 + n2);\n    setUserAnswer('');\n    setError('');\n  };\n\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const answer = parseInt(userAnswer);\n    \n    if (answer === correctAnswer) {\n      setError('');\n      onVerify(true);\n    } else {\n      setError('Incorrect answer. Please try again.');\n      onVerify(false);\n      generateCaptcha();\n    }\n  };\n\n  const handleRefresh = () => {\n    generateCaptcha();\n    onVerify(false);\n  };\n\n  if (isVerified) {\n    return (\n      <div className=\"captcha-container verified\">\n        <div className=\"captcha-success\">\n          <span className=\"checkmark\">âœ“</span>\n          <span>Captcha Verified</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"captcha-container\">\n      <div className=\"captcha-header\">\n        <span>Security Verification</span>\n        <button type=\"button\" onClick={handleRefresh} className=\"refresh-btn\">\n          ðŸ”„\n        </button>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"captcha-form\">\n        <div className=\"captcha-question\">\n          <span className=\"math-expression\">\n            {num1} + {num2} = ?\n          </span>\n        </div>\n        \n        <div className=\"captcha-input-group\">\n          <input\n            type=\"number\"\n            value={userAnswer}\n            onChange={(e) => setUserAnswer(e.target.value)}\n            placeholder=\"Enter answer\"\n            className=\"captcha-input\"\n            required\n          />\n          <button type=\"submit\" className=\"captcha-verify-btn\">\n            Verify\n          </button>\n        </div>\n        \n        {error && <div className=\"captcha-error\">{error}</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default Captcha;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
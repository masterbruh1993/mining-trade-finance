{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\1Uptrade-v3\\\\frontend\\\\src\\\\context\\\\RegistrationLinkContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  mainRegistrationLink: null,\n  linkStats: {\n    totalClicks: 0,\n    totalRegistrations: 0,\n    createdAt: null,\n    lastUsed: null\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nconst REGISTRATION_LINK_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  GENERATE_LINK: 'GENERATE_LINK',\n  UPDATE_STATS: 'UPDATE_STATS',\n  LOAD_LINK_DATA: 'LOAD_LINK_DATA',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  RESET_LINK: 'RESET_LINK'\n};\n\n// Reducer\nconst registrationLinkReducer = (state, action) => {\n  switch (action.type) {\n    case REGISTRATION_LINK_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case REGISTRATION_LINK_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case REGISTRATION_LINK_ACTIONS.GENERATE_LINK:\n      return {\n        ...state,\n        mainRegistrationLink: action.payload.link,\n        linkStats: {\n          ...action.payload.stats,\n          createdAt: new Date().toISOString()\n        },\n        loading: false,\n        error: null\n      };\n    case REGISTRATION_LINK_ACTIONS.UPDATE_STATS:\n      return {\n        ...state,\n        linkStats: {\n          ...state.linkStats,\n          ...action.payload,\n          lastUsed: new Date().toISOString()\n        }\n      };\n    case REGISTRATION_LINK_ACTIONS.LOAD_LINK_DATA:\n      return {\n        ...state,\n        mainRegistrationLink: action.payload.link,\n        linkStats: action.payload.stats || initialState.linkStats,\n        loading: false\n      };\n    case REGISTRATION_LINK_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case REGISTRATION_LINK_ACTIONS.RESET_LINK:\n      return {\n        ...state,\n        mainRegistrationLink: null,\n        linkStats: {\n          totalClicks: 0,\n          totalRegistrations: 0,\n          createdAt: null,\n          lastUsed: null\n        },\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst RegistrationLinkContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const RegistrationLinkProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(registrationLinkReducer, initialState);\n\n  // Load registration link data from localStorage on mount\n  useEffect(() => {\n    const savedLinkData = localStorage.getItem('registrationLinkData');\n    if (savedLinkData) {\n      try {\n        const linkData = JSON.parse(savedLinkData);\n        dispatch({\n          type: REGISTRATION_LINK_ACTIONS.LOAD_LINK_DATA,\n          payload: linkData\n        });\n      } catch (error) {\n        console.error('Error loading registration link data:', error);\n      }\n    }\n  }, []);\n\n  // Save registration link data to localStorage whenever state changes\n  useEffect(() => {\n    const linkData = {\n      link: state.mainRegistrationLink,\n      stats: state.linkStats\n    };\n    localStorage.setItem('registrationLinkData', JSON.stringify(linkData));\n  }, [state.mainRegistrationLink, state.linkStats]);\n\n  // Generate a unique registration link\n  const generateRegistrationLink = () => {\n    dispatch({\n      type: REGISTRATION_LINK_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      // Generate a unique identifier for the link\n      const linkId = generateUniqueId();\n      const baseUrl = window.location.origin;\n      const registrationLink = `${baseUrl}/register?ref=main&linkId=${linkId}`;\n      const linkData = {\n        link: registrationLink,\n        stats: {\n          totalClicks: 0,\n          totalRegistrations: 0,\n          createdAt: new Date().toISOString(),\n          lastUsed: null\n        }\n      };\n      dispatch({\n        type: REGISTRATION_LINK_ACTIONS.GENERATE_LINK,\n        payload: linkData\n      });\n      return registrationLink;\n    } catch (error) {\n      dispatch({\n        type: REGISTRATION_LINK_ACTIONS.SET_ERROR,\n        payload: 'Failed to generate registration link'\n      });\n      return null;\n    }\n  };\n\n  // Generate unique ID for the link\n  const generateUniqueId = () => {\n    const timestamp = Date.now().toString(36);\n    const randomStr = Math.random().toString(36).substring(2, 15);\n    return `${timestamp}-${randomStr}`;\n  };\n\n  // Update link statistics\n  const updateLinkStats = type => {\n    const updates = {};\n    if (type === 'click') {\n      updates.totalClicks = state.linkStats.totalClicks + 1;\n    } else if (type === 'registration') {\n      updates.totalRegistrations = state.linkStats.totalRegistrations + 1;\n    }\n    dispatch({\n      type: REGISTRATION_LINK_ACTIONS.UPDATE_STATS,\n      payload: updates\n    });\n  };\n\n  // Reset the registration link\n  const resetRegistrationLink = () => {\n    dispatch({\n      type: REGISTRATION_LINK_ACTIONS.RESET_LINK\n    });\n  };\n\n  // Copy link to clipboard\n  const copyLinkToClipboard = async link => {\n    try {\n      await navigator.clipboard.writeText(link);\n      return true;\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = link;\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      try {\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        return true;\n      } catch (fallbackError) {\n        document.body.removeChild(textArea);\n        return false;\n      }\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: REGISTRATION_LINK_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Format date for display\n  const formatDate = dateString => {\n    if (!dateString) return 'Never';\n    return new Date(dateString).toLocaleString();\n  };\n\n  // Calculate conversion rate\n  const getConversionRate = () => {\n    if (state.linkStats.totalClicks === 0) return 0;\n    return (state.linkStats.totalRegistrations / state.linkStats.totalClicks * 100).toFixed(1);\n  };\n  const value = {\n    ...state,\n    generateRegistrationLink,\n    updateLinkStats,\n    resetRegistrationLink,\n    copyLinkToClipboard,\n    clearError,\n    formatDate,\n    getConversionRate\n  };\n  return /*#__PURE__*/_jsxDEV(RegistrationLinkContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(RegistrationLinkProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = RegistrationLinkProvider;\nexport const useRegistrationLink = () => {\n  _s2();\n  const context = useContext(RegistrationLinkContext);\n  if (!context) {\n    throw new Error('useRegistrationLink must be used within a RegistrationLinkProvider');\n  }\n  return context;\n};\n_s2(useRegistrationLink, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default RegistrationLinkContext;\nvar _c;\n$RefreshReg$(_c, \"RegistrationLinkProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","mainRegistrationLink","linkStats","totalClicks","totalRegistrations","createdAt","lastUsed","loading","error","REGISTRATION_LINK_ACTIONS","SET_LOADING","SET_ERROR","GENERATE_LINK","UPDATE_STATS","LOAD_LINK_DATA","CLEAR_ERROR","RESET_LINK","registrationLinkReducer","state","action","type","payload","link","stats","Date","toISOString","RegistrationLinkContext","RegistrationLinkProvider","children","_s","dispatch","savedLinkData","localStorage","getItem","linkData","JSON","parse","console","setItem","stringify","generateRegistrationLink","linkId","generateUniqueId","baseUrl","window","location","origin","registrationLink","timestamp","now","toString","randomStr","Math","random","substring","updateLinkStats","updates","resetRegistrationLink","copyLinkToClipboard","navigator","clipboard","writeText","textArea","document","createElement","value","body","appendChild","focus","select","execCommand","removeChild","fallbackError","clearError","formatDate","dateString","toLocaleString","getConversionRate","toFixed","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRegistrationLink","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/1Uptrade-v3/frontend/src/context/RegistrationLinkContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nconst initialState = {\n  mainRegistrationLink: null,\n  linkStats: {\n    totalClicks: 0,\n    totalRegistrations: 0,\n    createdAt: null,\n    lastUsed: null\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nconst REGISTRATION_LINK_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  GENERATE_LINK: 'GENERATE_LINK',\n  UPDATE_STATS: 'UPDATE_STATS',\n  LOAD_LINK_DATA: 'LOAD_LINK_DATA',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  RESET_LINK: 'RESET_LINK'\n};\n\n// Reducer\nconst registrationLinkReducer = (state, action) => {\n  switch (action.type) {\n    case REGISTRATION_LINK_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case REGISTRATION_LINK_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case REGISTRATION_LINK_ACTIONS.GENERATE_LINK:\n      return {\n        ...state,\n        mainRegistrationLink: action.payload.link,\n        linkStats: {\n          ...action.payload.stats,\n          createdAt: new Date().toISOString()\n        },\n        loading: false,\n        error: null\n      };\n    case REGISTRATION_LINK_ACTIONS.UPDATE_STATS:\n      return {\n        ...state,\n        linkStats: {\n          ...state.linkStats,\n          ...action.payload,\n          lastUsed: new Date().toISOString()\n        }\n      };\n    case REGISTRATION_LINK_ACTIONS.LOAD_LINK_DATA:\n      return {\n        ...state,\n        mainRegistrationLink: action.payload.link,\n        linkStats: action.payload.stats || initialState.linkStats,\n        loading: false\n      };\n    case REGISTRATION_LINK_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case REGISTRATION_LINK_ACTIONS.RESET_LINK:\n      return {\n        ...state,\n        mainRegistrationLink: null,\n        linkStats: {\n          totalClicks: 0,\n          totalRegistrations: 0,\n          createdAt: null,\n          lastUsed: null\n        },\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst RegistrationLinkContext = createContext();\n\n// Provider component\nexport const RegistrationLinkProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(registrationLinkReducer, initialState);\n\n  // Load registration link data from localStorage on mount\n  useEffect(() => {\n    const savedLinkData = localStorage.getItem('registrationLinkData');\n    if (savedLinkData) {\n      try {\n        const linkData = JSON.parse(savedLinkData);\n        dispatch({\n          type: REGISTRATION_LINK_ACTIONS.LOAD_LINK_DATA,\n          payload: linkData\n        });\n      } catch (error) {\n        console.error('Error loading registration link data:', error);\n      }\n    }\n  }, []);\n\n  // Save registration link data to localStorage whenever state changes\n  useEffect(() => {\n    const linkData = {\n      link: state.mainRegistrationLink,\n      stats: state.linkStats\n    };\n    localStorage.setItem('registrationLinkData', JSON.stringify(linkData));\n  }, [state.mainRegistrationLink, state.linkStats]);\n\n  // Generate a unique registration link\n  const generateRegistrationLink = () => {\n    dispatch({ type: REGISTRATION_LINK_ACTIONS.SET_LOADING, payload: true });\n    \n    try {\n      // Generate a unique identifier for the link\n      const linkId = generateUniqueId();\n      const baseUrl = window.location.origin;\n      const registrationLink = `${baseUrl}/register?ref=main&linkId=${linkId}`;\n      \n      const linkData = {\n        link: registrationLink,\n        stats: {\n          totalClicks: 0,\n          totalRegistrations: 0,\n          createdAt: new Date().toISOString(),\n          lastUsed: null\n        }\n      };\n      \n      dispatch({\n        type: REGISTRATION_LINK_ACTIONS.GENERATE_LINK,\n        payload: linkData\n      });\n      \n      return registrationLink;\n    } catch (error) {\n      dispatch({\n        type: REGISTRATION_LINK_ACTIONS.SET_ERROR,\n        payload: 'Failed to generate registration link'\n      });\n      return null;\n    }\n  };\n\n  // Generate unique ID for the link\n  const generateUniqueId = () => {\n    const timestamp = Date.now().toString(36);\n    const randomStr = Math.random().toString(36).substring(2, 15);\n    return `${timestamp}-${randomStr}`;\n  };\n\n  // Update link statistics\n  const updateLinkStats = (type) => {\n    const updates = {};\n    \n    if (type === 'click') {\n      updates.totalClicks = state.linkStats.totalClicks + 1;\n    } else if (type === 'registration') {\n      updates.totalRegistrations = state.linkStats.totalRegistrations + 1;\n    }\n    \n    dispatch({\n      type: REGISTRATION_LINK_ACTIONS.UPDATE_STATS,\n      payload: updates\n    });\n  };\n\n  // Reset the registration link\n  const resetRegistrationLink = () => {\n    dispatch({ type: REGISTRATION_LINK_ACTIONS.RESET_LINK });\n  };\n\n  // Copy link to clipboard\n  const copyLinkToClipboard = async (link) => {\n    try {\n      await navigator.clipboard.writeText(link);\n      return true;\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = link;\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      try {\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        return true;\n      } catch (fallbackError) {\n        document.body.removeChild(textArea);\n        return false;\n      }\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({ type: REGISTRATION_LINK_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Format date for display\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Never';\n    return new Date(dateString).toLocaleString();\n  };\n\n  // Calculate conversion rate\n  const getConversionRate = () => {\n    if (state.linkStats.totalClicks === 0) return 0;\n    return ((state.linkStats.totalRegistrations / state.linkStats.totalClicks) * 100).toFixed(1);\n  };\n\n  const value = {\n    ...state,\n    generateRegistrationLink,\n    updateLinkStats,\n    resetRegistrationLink,\n    copyLinkToClipboard,\n    clearError,\n    formatDate,\n    getConversionRate\n  };\n\n  return (\n    <RegistrationLinkContext.Provider value={value}>\n      {children}\n    </RegistrationLinkContext.Provider>\n  );\n};\n\n// Custom hook to use the context\nexport const useRegistrationLink = () => {\n  const context = useContext(RegistrationLinkContext);\n  if (!context) {\n    throw new Error('useRegistrationLink must be used within a RegistrationLinkProvider');\n  }\n  return context;\n};\n\nexport default RegistrationLinkContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\1Uptrade-v3\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        userRole: action.payload.userRole,\n        error: null\n      };\n    case 'LOGIN_FAIL':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        userRole: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        userRole: null,\n        loading: false,\n        error: null\n      };\n    case 'LOAD_USER':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        userRole: action.payload.userRole,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  userRole: null,\n  loading: false,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set auth token in axios headers\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token) {\n      loadUser();\n    }\n  }, []);\n  const login = async (emailOrUsername, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n\n    // Check for admin credentials\n    if (emailOrUsername === 'admin@1uptrade.com' && password === 'admin123') {\n      const adminToken = 'admin-token-' + Date.now();\n      const adminUser = {\n        id: 'admin',\n        email: 'admin@1uptrade.com',\n        name: 'Administrator',\n        role: 'admin'\n      };\n      localStorage.setItem('token', adminToken);\n      localStorage.setItem('isAdmin', 'true');\n      dispatch({\n        type: 'ADMIN_LOGIN_SUCCESS',\n        payload: {\n          user: adminUser,\n          token: adminToken\n        }\n      });\n      return {\n        success: true,\n        isAdmin: true\n      };\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/v1/auth/login', {\n        emailOrUsername,\n        password\n      });\n      const {\n        token,\n        data\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.removeItem('isAdmin');\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data,\n          token\n        }\n      });\n      return {\n        success: true,\n        isAdmin: false\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const res = await axios.post('http://localhost:5000/api/v1/auth/register', userData);\n      const {\n        token,\n        data\n      } = res.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const loadUser = async () => {\n    try {\n      // Check if admin is logged in\n      const isAdmin = localStorage.getItem('isAdmin') === 'true';\n      if (isAdmin && state.token && state.token.startsWith('admin-token-')) {\n        const adminUser = {\n          id: 'admin',\n          email: 'admin@1uptrade.com',\n          name: 'Administrator',\n          role: 'admin'\n        };\n        dispatch({\n          type: 'ADMIN_LOGIN_SUCCESS',\n          payload: {\n            user: adminUser,\n            token: state.token\n          }\n        });\n        return;\n      }\n      const res = await axios.get('http://localhost:5000/api/v1/auth/me');\n      dispatch({\n        type: 'LOAD_USER',\n        payload: res.data.data\n      });\n    } catch (error) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAdmin');\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: 'Failed to load user'\n      });\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isAdmin');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      register,\n      logout,\n      clearError,\n      loadUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","token","userRole","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","defaults","headers","common","loadUser","login","emailOrUsername","password","adminToken","Date","now","adminUser","id","email","name","role","setItem","success","isAdmin","res","post","data","removeItem","_error$response","_error$response$data","errorMessage","response","register","userData","_error$response2","_error$response2$data","startsWith","get","logout","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/1Uptrade-v3/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        userRole: action.payload.userRole,\n        error: null\n      };\n    case 'LOGIN_FAIL':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        userRole: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        userRole: null,\n        loading: false,\n        error: null\n      };\n    case 'LOAD_USER':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        userRole: action.payload.userRole,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  userRole: null,\n  loading: false,\n  error: null\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set auth token in axios headers\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token) {\n      loadUser();\n    }\n  }, []);\n\n  const login = async (emailOrUsername, password) => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    // Check for admin credentials\n    if (emailOrUsername === 'admin@1uptrade.com' && password === 'admin123') {\n      const adminToken = 'admin-token-' + Date.now();\n      const adminUser = {\n        id: 'admin',\n        email: 'admin@1uptrade.com',\n        name: 'Administrator',\n        role: 'admin'\n      };\n      \n      localStorage.setItem('token', adminToken);\n      localStorage.setItem('isAdmin', 'true');\n      \n      dispatch({\n        type: 'ADMIN_LOGIN_SUCCESS',\n        payload: {\n          user: adminUser,\n          token: adminToken\n        }\n      });\n      \n      return { success: true, isAdmin: true };\n    }\n    \n    try {\n      const res = await axios.post('http://localhost:5000/api/v1/auth/login', {\n        emailOrUsername,\n        password\n      });\n      \n      const { token, data } = res.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.removeItem('isAdmin');\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data,\n          token\n        }\n      });\n      \n      return { success: true, isAdmin: false };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const res = await axios.post('http://localhost:5000/api/v1/auth/register', userData);\n      \n      const { token, data } = res.data;\n      \n      localStorage.setItem('token', token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data,\n          token\n        }\n      });\n      \n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const loadUser = async () => {\n    try {\n      // Check if admin is logged in\n      const isAdmin = localStorage.getItem('isAdmin') === 'true';\n      if (isAdmin && state.token && state.token.startsWith('admin-token-')) {\n        const adminUser = {\n          id: 'admin',\n          email: 'admin@1uptrade.com',\n          name: 'Administrator',\n          role: 'admin'\n        };\n        dispatch({\n          type: 'ADMIN_LOGIN_SUCCESS',\n          payload: {\n            user: adminUser,\n            token: state.token\n          }\n        });\n        return;\n      }\n      \n      const res = await axios.get('http://localhost:5000/api/v1/auth/me');\n      dispatch({\n        type: 'LOAD_USER',\n        payload: res.data.data\n      });\n    } catch (error) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAdmin');\n      dispatch({ type: 'LOGIN_FAIL', payload: 'Failed to load user' });\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isAdmin');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        login,\n        register,\n        logout,\n        clearError,\n        loadUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}